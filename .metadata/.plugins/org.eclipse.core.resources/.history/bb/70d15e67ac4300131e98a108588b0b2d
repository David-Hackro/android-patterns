package com.example.pattern.proxyCache;

import java.util.List;
import java.util.Random;

import com.example.pattern.repository.R;

import android.app.ListActivity;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.BatteryManager;
import android.os.Bundle;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

public class MainActivity extends ListActivity {
  
  @Override
  public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

  }

  public void cpuCompute(View view) {
	  
      Button startCompute = (Button) findViewById(R.id.localBtn);
      startCompute.setClickable(false);

      EditText nQueenTextBox = (EditText) findViewById(R.id.numQueens);
      int nQueen = Integer.parseInt(nQueenTextBox.getText().toString());

      EditText noOfLoop = (EditText) findViewById(R.id.numLoop);
      int noOfTimes = Integer.parseInt(noOfLoop.getText().toString());

      beginLocalCompute(nQueen,noOfTimes);

      startCompute.setClickable(true);
  }
  
  protected void beginLocalCompute(int nQueen, int noOfTimes) {

      //initial time and battery level
      long currentTime = System.currentTimeMillis();
      float initialBatteryLife = getCurrentBatteryLife();

      for (int i =0; i<noOfTimes;i++){
    	  nQueenAlgo.enumerate(nQueen);
      }

      //after computing
      long finishTime = System.currentTimeMillis();
      long totalTime = finishTime - currentTime;
      float endBatteryLife = getCurrentBatteryLife();
      float consumedBattery = initialBatteryLife - endBatteryLife;

      TextView timeTaken = (TextView) findViewById(R.id.localTaken);
      timeTaken.setText("Time taken = " + totalTime + " mili seconds");
  }

  public void cloudCompute(View view){

      Button startCompute = (Button) findViewById(R.id.remoteBtn);
      startCompute.setClickable(false);

      EditText nQueenTextBox = (EditText) findViewById(R.id.numQueens);
      int nQueen = Integer.parseInt(nQueenTextBox.getText().toString());

      EditText noOfLoop = (EditText) findViewById(R.id.numLoop);
      int noOfTimes = Integer.parseInt(noOfLoop.getText().toString());

      //initial time and battery level
      long currentTime = System.currentTimeMillis();
      float initialBatteryLife = getCurrentBatteryLife();

      try{
          for(int i =0; i<noOfTimes;i++){
              LongRunningComputation longRunningIO = new LongRunningComputation(this);
              longRunningIO.execute(nQueen,i).get();
          }
      }catch(Exception e){}

      //after computing
      long finishTime = System.currentTimeMillis();
      long totalTime = finishTime - currentTime;
      float endBatteryLife = getCurrentBatteryLife();
      float consumedBattery = initialBatteryLife - endBatteryLife;

      TextView timeTaken = (TextView) findViewById(R.id.remoteTaken);
      timeTaken.setText("Time taken = " + totalTime + " mili seconds");

      startCompute.setClickable(true);
  }
  
  protected float getCurrentBatteryLife(){

      IntentFilter ifilter = new IntentFilter(Intent.ACTION_BATTERY_CHANGED);
      Intent batteryStatus = this.registerReceiver(null, ifilter);

      int level = batteryStatus.getIntExtra(BatteryManager.EXTRA_LEVEL, -1);
      int scale = batteryStatus.getIntExtra(BatteryManager.EXTRA_SCALE, -1);
      float batteryPct = level / (float)scale;

      return batteryPct;
  }
  

} 